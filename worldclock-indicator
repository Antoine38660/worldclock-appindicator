#!/usr/bin/python2.7
# coding: utf-8
#
# A simple indicator applet displaying a clock in a choosed timezone
#
# Author: Antoine Boisadam <antoineboisadam@gmail.com>
# Homepage: https://github.com/Antoine38660/worldclock-indicator
# License: MIT
#

import os
import signal
import datetime
import pytz
import ConfigParser
import io
from gi.repository import Gtk as gtk
from gi.repository import GLib as glib
from gi.repository import AppIndicator3 as appindicator

APPINDICATOR_ID = 'WorldClockIndicator'

def main():
    # Setting up AppIndicator
    indicator = appindicator.Indicator.new(APPINDICATOR_ID, os.path.abspath('icon.svg'), appindicator.IndicatorCategory.SYSTEM_SERVICES)
    indicator.set_status(appindicator.IndicatorStatus.ACTIVE)
    indicator.set_menu(build_menu())

    # Initialisation
    set_current_time(indicator)

    # Create a timeout function that will be called every seconds
    glib.timeout_add_seconds(1, set_current_time, indicator)

    gtk.main()

def set_current_time(*args):
    with open('config.txt') as f:
        tz_config = f.read()
    tz = pytz.timezone(tz_config.rstrip())
    now = datetime.datetime.now(tz)
    hours = str(now.hour)
    minutes = str(now.minute)
    # Add a 0 if the number of hours/minutes have only one digit
    if now.hour < 10:
        hours = "0" + hour
    if now.minute < 10:
        minutes = "0"+minutes
    args[0].set_label(hours + ':' + minutes, '00:00')
    return True
    

def change_tz(source):
    with open('config.txt', 'w') as f:
        f.write(source.get_label())

def quit(source):
    gtk.main_quit()

def build_menu():
    # Main menu
    menu = gtk.Menu()

    # Main menu items
    item_timezone = gtk.MenuItem('Timezone')
    item_quit = gtk.MenuItem('Quit')
    item_quit.connect('activate', quit)

    # Timezone submenu
    menu_timezones = gtk.Menu()

    # Timezone items
    # Open the timezones.ini file and parse it with a ConfigParser
    with open("timezones.ini") as f:
        sample_timezones = f.read()
    timezones = ConfigParser.RawConfigParser(allow_no_value=True)
    timezones.readfp(io.BytesIO(sample_timezones))

    # Create all menu items in 'zone' submenus
    for section in timezones.sections():
        menu_section = gtk.Menu()
        item_section = gtk.MenuItem(section)
        for timezone in timezones.options(section):
            item_tz = gtk.MenuItem(timezones.get(section, timezone))
            item_tz.connect('activate', change_tz)
            menu_section.append(item_tz)
        item_section.set_submenu(menu_section)
        menu_timezones.append(item_section)

    # Set submenu
    item_timezone.set_submenu(menu_timezones)
    # Append MenuItems to MainMenu
    menu.append(item_timezone)
    menu.append(item_quit)

    menu.show_all()
    return menu

if __name__ == "__main__":
    signal.signal(signal.SIGINT, signal.SIG_DFL)
    main()
